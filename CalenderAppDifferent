import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

class Event {
    private String title;
    private Calendar date;

    public Event(String title, Calendar date) {
        this.title = title;
        this.date = date;
    }

    public String getTitle() {
        return title;
    }

    public Calendar getDate() {
        return date;
    }
}

public class CalendarApp extends JFrame {
    private Map<Calendar, List<Event>> eventsMap;
    private JTextArea eventTextArea;
    private JComboBox<Integer> dayComboBox;
    private JComboBox<String> monthComboBox;
    private JComboBox<Integer> yearComboBox;

    public CalendarApp() {
        eventsMap = new HashMap<>();

        JPanel panel = new JPanel(new BorderLayout());

        JPanel datePanel = new JPanel();
        dayComboBox = new JComboBox<>(getDayArray());
        monthComboBox = new JComboBox<>(getMonthArray());
        yearComboBox = new JComboBox<>(getYearArray());

        datePanel.add(new JLabel("Date: "));
        datePanel.add(dayComboBox);
        datePanel.add(monthComboBox);
        datePanel.add(yearComboBox);

        panel.add(datePanel, BorderLayout.NORTH);

        eventTextArea = new JTextArea();
        panel.add(new JScrollPane(eventTextArea), BorderLayout.CENTER);

        JButton addButton = new JButton("Add Event");
        addButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                addEvent();
            }
        });
        panel.add(addButton, BorderLayout.SOUTH);

        add(panel);

        setTitle("Calendar App");
        setSize(600, 400);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);

        dayComboBox.addActionListener(e -> updateEventTextArea());
        monthComboBox.addActionListener(e -> updateEventTextArea());
        yearComboBox.addActionListener(e -> updateEventTextArea());
    }

    private Integer[] getDayArray() {
        Integer[] days = new Integer[31];
        for (int i = 1; i <= 31; i++) {
            days[i - 1] = i;
        }
        return days;
    }

    private String[] getMonthArray() {
        return new String[]{"January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"};
    }

    private Integer[] getYearArray() {
        Integer[] years = new Integer[100];
        int currentYear = Calendar.getInstance().get(Calendar.YEAR);
        for (int i = 0; i < 100; i++) {
            years[i] = currentYear + i;
        }
        return years;
    }

    private void addEvent() {
        String title = JOptionPane.showInputDialog("Enter event title:");

        if (title != null) {
            int day = (int) dayComboBox.getSelectedItem();
            int month = monthComboBox.getSelectedIndex();
            int year = (int) yearComboBox.getSelectedItem();

            Calendar selectedDate = Calendar.getInstance();
            selectedDate.set(Calendar.YEAR, year);
            selectedDate.set(Calendar.MONTH, month);
            selectedDate.set(Calendar.DAY_OF_MONTH, day);

            List<Event> events = eventsMap.getOrDefault(selectedDate, new ArrayList<>());

            Event event = new Event(title, selectedDate);
            events.add(event);

            eventsMap.put(selectedDate, events);
            updateEventTextArea();
        }
    }

    private void updateEventTextArea() {
        int day = (int) dayComboBox.getSelectedItem();
        int month = monthComboBox.getSelectedIndex();
        int year = (int) yearComboBox.getSelectedItem();

        Calendar selectedDate = Calendar.getInstance();
        selectedDate.set(Calendar.YEAR, year);
        selectedDate.set(Calendar.MONTH, month);
        selectedDate.set(Calendar.DAY_OF_MONTH, day);

        List<Event> events = eventsMap.getOrDefault(selectedDate, new ArrayList<>());

        eventTextArea.setText("");
        SimpleDateFormat dateFormat = new SimpleDateFormat("MM/dd/yyyy");
        eventTextArea.append("Events for " + dateFormat.format(selectedDate.getTime()) + ":\n");

        for (Event event : events) {
            eventTextArea.append("- " + event.getTitle() + "\n");
        }
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> new CalendarApp().setVisible(true));
    }
}
