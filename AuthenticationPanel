import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.*;
import java.util.HashMap;
import java.util.Map;
import javax.swing.*;

public class AuthenticationPanel extends JFrame {
   private Map<String, String> userCredentials;

   public AuthenticationPanel() {
      userCredentials = loadUserCredentials();

      setTitle("Sign Up / Login Panel");
      setSize(300, 150);
      setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
      setLocationRelativeTo(null);

      JPanel panel = new JPanel();
      panel.setLayout(new GridLayout(3, 1));

      JButton signUpButton = new JButton("Sign Up");
      JButton loginButton = new JButton("Login");

      signUpButton.addActionListener(new ActionListener() {
         @Override
         public void actionPerformed(ActionEvent e) {
            showSignUpDialog();
         }
      });

      loginButton.addActionListener(new ActionListener() {
         @Override
         public void actionPerformed(ActionEvent e) {
            showLoginDialog();
         }
      });

      panel.add(signUpButton);
      panel.add(loginButton);

      add(panel);

      setVisible(true);
   }

   private Map<String, String> loadUserCredentials() {
      Map<String, String> credentials = new HashMap<>();

      try (ObjectInputStream ois = new ObjectInputStream(new FileInputStream("user_credentials.dat"))) {
         credentials = (Map<String, String>) ois.readObject();
      } catch (FileNotFoundException e) {
         // Handle file not found (first run)
      } catch (IOException | ClassNotFoundException e) {
         e.printStackTrace(); // Handle other exceptions
      }

      return credentials;
   }

   private void saveUserCredentials() {
      try (ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream("user_credentials.dat"))) {
         oos.writeObject(userCredentials);
      } catch (IOException e) {
         e.printStackTrace(); // Handle the exception
      }
   }

   private void showSignUpDialog() {
      JFrame signUpFrame = new JFrame("Sign Up");
      signUpFrame.setSize(300, 150);
      signUpFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
      signUpFrame.setLocationRelativeTo(this);

      JPanel signUpPanel = new JPanel();
      signUpPanel.setLayout(new GridLayout(3, 2));

      JTextField usernameField = new JTextField();
      JPasswordField passwordField = new JPasswordField();

      JButton signUpButton = new JButton("Sign Up");
      signUpButton.addActionListener(new ActionListener() {
         @Override
         public void actionPerformed(ActionEvent e) {
            String username = usernameField.getText();
            char[] passwordChars = passwordField.getPassword();
            String password = new String(passwordChars);

            if (!userCredentials.containsKey(username)) {
               userCredentials.put(username, password);
               saveUserCredentials(); // Save user credentials to file
               JOptionPane.showMessageDialog(signUpFrame, "Sign Up Successful!", "Success", JOptionPane.INFORMATION_MESSAGE);
               signUpFrame.dispose();
            } else {
               JOptionPane.showMessageDialog(signUpFrame, "Username already exists. Please choose a different username.", "Error", JOptionPane.ERROR_MESSAGE);
            }
         }
      });
      signUpPanel.add(new JLabel("Username:"));
      signUpPanel.add(usernameField);
      signUpPanel.add(new JLabel("Password:"));
      signUpPanel.add(passwordField);
      signUpPanel.add(signUpButton);

      signUpFrame.add(signUpPanel);
      signUpFrame.setVisible(true);
   }

   private void showLoginDialog() {
      JFrame loginFrame = new JFrame("Login");
      loginFrame.setSize(300, 150);
      loginFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
      loginFrame.setLocationRelativeTo(this);

      JPanel loginPanel = new JPanel();
      loginPanel.setLayout(new GridLayout(3, 2));

      JTextField usernameField = new JTextField();
      JPasswordField passwordField = new JPasswordField();

      JButton loginButton = new JButton("Login");
      loginButton.addActionListener(new ActionListener() {
         @Override
         public void actionPerformed(ActionEvent e) {
            String username = usernameField.getText();
            char[] passwordChars = passwordField.getPassword();
            String password = new String(passwordChars);

            if (userCredentials.containsKey(username) && userCredentials.get(username).equals(password)) {
               openMainApplication(username); // Pass the username to the main application
               saveUserCredentials(); // Save user credentials to file after successful login
               loginFrame.dispose();
            } else {
               JOptionPane.showMessageDialog(loginFrame, "Invalid username or password. Please try again.", "Error", JOptionPane.ERROR_MESSAGE);
            }
         }
      });
      loginPanel.add(new JLabel("Username:"));
      loginPanel.add(usernameField);
      loginPanel.add(new JLabel("Password:"));
      loginPanel.add(passwordField);
      loginPanel.add(loginButton);

      loginFrame.add(loginPanel);
      loginFrame.setVisible(true);
   }

   private void openMainApplication(String username) {
      SwingUtilities.invokeLater(new Runnable() {
         @Override
         public void run() {
            new CalendarApp(username); // Pass the username to CalendarApp
         }
      });
   }

   public static void main(String[] args) {
      SwingUtilities.invokeLater(new Runnable() {
         @Override
         public void run() {
            new AuthenticationPanel();
         }
      });
   }
}
