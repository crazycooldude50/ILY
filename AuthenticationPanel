import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.*;
import java.util.HashMap;
import java.util.Map;
import javax.swing.*;

public class AuthenticationPanel extends JFrame {
   private static final String FILE_NAME = "saved_information.txt";

   public AuthenticationPanel() {
      setTitle("Sign Up / Login Panel");
      setSize(300, 150);
      setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
      setLocationRelativeTo(null);

      JPanel panel = new JPanel();
      panel.setLayout(new GridLayout(3, 1));

      JButton signUpButton = new JButton("Sign Up");
      JButton loginButton = new JButton("Login");

      signUpButton.addActionListener(new ActionListener() {
         @Override
         public void actionPerformed(ActionEvent e) {
            showSignUpDialog();
         }
      });

      loginButton.addActionListener(new ActionListener() {
         @Override
         public void actionPerformed(ActionEvent e) {
            showLoginDialog();
         }
      });

      panel.add(signUpButton);
      panel.add(loginButton);

      add(panel);

      setVisible(true);
   }

   private static void addNewProfile(String username, String password) {
      try (PrintWriter writer = new PrintWriter(new FileWriter(FILE_NAME, true))) {
         // Write lines to the newly created file
         writer.println("Username: " + username);
         writer.println("Password: " + password);
         writer.println("Title: ");
         writer.println("Month: ");
         writer.println("Day: ");
      } catch (IOException e) {
         e.printStackTrace();
      }
   }
    
    private void updatePassword(String currentUsername, String currentPassword) {
    String[] lines;

    // Read all lines from the existing file into an array
    try (BufferedReader reader = new BufferedReader(new FileReader(FILE_NAME))) {
        // Count the number of lines
        int lineCount = 0;
        while (reader.readLine() != null) {
            lineCount++;
        }

        // Initialize the array
        lines = new String[lineCount];

        // Reset the reader to the beginning of the file
        reader.close();
        reader = new BufferedReader(new FileReader(FILE_NAME));

        // Read lines into the array
        for (int i = 0; i < lineCount; i++) {
            lines[i] = reader.readLine();
        }
    } catch (IOException e) {
        e.printStackTrace();
        return;
    }

    // Update the password line in the array
    for (int i = 0; i < lines.length; i++) {
        if (lines[i].startsWith("Username: " + currentUsername)) {
            lines[i] = "Password: " + currentPassword;
        }
    }

    // Write the updated array back to the file
    try (BufferedWriter writer = new BufferedWriter(new FileWriter(FILE_NAME))) {
        for (String line : lines) {
            writer.write(line);
            writer.newLine();
        }
    } catch (IOException e) {
        e.printStackTrace();
        return;
    }

    System.out.println("Password updated successfully.");
}

 private void showSignUpDialog() {
      JFrame signUpFrame = new JFrame("Sign Up");
      signUpFrame.setSize(300, 150);
      signUpFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
      signUpFrame.setLocationRelativeTo(this);

      JPanel signUpPanel = new JPanel();
      signUpPanel.setLayout(new GridLayout(3, 2));

      JTextField usernameField = new JTextField();
      JPasswordField passwordField = new JPasswordField();

      JButton signUpButton = new JButton("Sign Up");
      signUpButton.addActionListener(new ActionListener() {
         @Override
         public void actionPerformed(ActionEvent e) {
            String username = usernameField.getText();
            char[] passwordChars = passwordField.getPassword();
            String password = new String(passwordChars);

            if (!userCredentials.containsKey(username)) {
               addNewProfile(username);
               userCredentials.put(username, password);
               updatePassword(username, password);

               JOptionPane.showMessageDialog(signUpFrame, "Sign Up Successful!", "Success", JOptionPane.INFORMATION_MESSAGE);
               signUpFrame.dispose();
            } else {
               JOptionPane.showMessageDialog(signUpFrame, "Username already exists. Please choose a different username.", "Error", JOptionPane.ERROR_MESSAGE);
            }
         }
      });
      signUpPanel.add(new JLabel("Username:"));
      signUpPanel.add(usernameField);
      signUpPanel.add(new JLabel("Password:"));
      signUpPanel.add(passwordField);
      signUpPanel.add(signUpButton);

      signUpFrame.add(signUpPanel);
      signUpFrame.setVisible(true);
   }

   private void showLoginDialog() {
      JFrame loginFrame = new JFrame("Login");
      loginFrame.setSize(300, 150);
      loginFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
      loginFrame.setLocationRelativeTo(this);

      JPanel loginPanel = new JPanel();
      loginPanel.setLayout(new GridLayout(3, 2));

      JTextField usernameField = new JTextField();
      JPasswordField passwordField = new JPasswordField();

      JButton loginButton = new JButton("Login");
      loginButton.addActionListener(new ActionListener() {
         @Override
         public void actionPerformed(ActionEvent e) {
            String username = usernameField.getText();
            String password = passwordField.getText();
            System.out.println(userCredentials);

            if (userCredentials.containsKey(username) && userCredentials.get(username).equals(password)) {
               updatePassword(username, password); // Update password after successful login
               openMainApplication(username);
               loginFrame.dispose();
            } else {
               JOptionPane.showMessageDialog(loginFrame, "Invalid username or password. Please try again.", "Error", JOptionPane.ERROR_MESSAGE);
            }
         }
      });
      loginPanel.add(new JLabel("Username:"));
      loginPanel.add(usernameField);
      loginPanel.add(new JLabel("Password:"));
      loginPanel.add(passwordField);
      loginPanel.add(loginButton);

      loginFrame.add(loginPanel);
      loginFrame.setVisible(true);
   }

   private void openMainApplication(String username) {
      SwingUtilities.invokeLater(new Runnable() {
         @Override
         public void run() {
            new CalendarApp(username); // Pass the username to CalendarApp
         }
      });
   }

   public static void main(String[] args) {
      SwingUtilities.invokeLater(new Runnable() {
         @Override
         public void run() {
            new AuthenticationPanel();
         }
      });
   }
}
